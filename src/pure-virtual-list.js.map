{"version":3,"sources":["../dist/pure-virtual-list.js"],"names":[],"mappings":"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","file":"pure-virtual-list.js","sourcesContent":["/**\n * Created by allin_000 on 04.09.2016.\n */\n\n//Если есть необходимость\nclass Api {\n    constructor(obj){\n        return new Promise(\n            function (resolve, reject) {\n\n                if (!obj) reject(new Error('Haven\\'t setting'));\n\n                const request = new XMLHttpRequest();\n\n                request.onload = function () {\n                    if (obj.statusAcceptence.indexOf(this.status) == 0) {\n                        resolve({\n                            response: this.response,\n                            headers: this.getAllResponseHeaders()\n                        });\n                    } else {\n                        reject(new Error(this.statusText));\n                    }\n                };\n\n                request.onerror = function () {\n                    reject(new Error('XMLHttpRequest Error: '+this.statusText));\n                };\n\n                request.ontimeout = function(){\n                    reject(new Error('XMLHttpRequest Error: timeout'));\n                };\n\n                request.onloadstart = function(){\n                    if (obj.onloadstart) obj.onloadstart();\n                };\n\n                request.onloadend = function(){\n                    if (obj.onloadend) obj.onloadend();\n                };\n\n                request.onprogress = function(){\n                    if (obj.onprogress) obj.onprogress();\n                };\n\n                //XHR settings\n                if (obj.timeout){request.timeout = obj.timeout;}\n                if (!obj.method){obj.method = 'GET'}\n                request.open(obj.method, obj.url, true);\n\n                if (obj.headers && obj.headers.length){\n                    for (var i = 0; i < obj.headers.length; i++) {\n                        request.setRequestHeader(obj.headers[i].name, obj.headers[i].value);\n                    }\n                }\n\n                obj.body?request.send(obj.body):request.send();\n\n            });\n    };\n};\n\n\n//Если нужно написать тимплейт со своей сериализацией\nclass ListTemplate{\n\n    constructor(template, items, key){\n\n        if (!template) return false;\n        var html;\n\n\n        switch (template) {\n            case 'list':\n                var item = items;\n                if (key){\n                    html =\n                        (item[key].length > 1)\n                            ? `<a href=\"#action-${item[key]}\" class=\"list-group-item list-group-item-action\">${item[key]}</a>`\n                            : `<div class=\"list-group-item \">${item[key]}</div>`\n                    ;\n                }\n                break;\n\n            default:\n                console.log('шаблона нету');\n                return false;\n        }\n\n\n        return html;\n    }\n};\n\nclass VirtualList {\n\n    constructor(obj, data, templateList){\n\n        //TODO: сделать заголовки списка в зависимости от regex,\n        //TODO: сделать возможность не обязательных заголовков в листе\n        this.templateList = templateList;\n        this.config = obj;\n        this.data = this.sortedByKey(data, this.config.sortKey);\n\n        for (let i = 0; i < document.querySelectorAll(obj.domElement).length; i++) {\n            let el = document.querySelectorAll(obj.domElement)[i];\n            this.VirtualListConfig(el);\n        }\n    }\n\n    VirtualListConfig(el) {\n        if (!el || !this.data.length) return false;\n        //TODO: было бы не плохо сделать лист горизонтальным\n        const width = el.offsetWidth+'px';\n        const height = el.offsetHeight;\n        const itemHeight = this.itemHeight = this.config.itemHeight;\n        const fullHeight = itemHeight * this.data.length;\n\n        this.items = this.data;\n        this.totalRows = this.config.totalRows || (this.data.length);\n\n        const scrollerStart = this.createScroller(0);\n        const scrollerEnd   = this.createScroller(itemHeight * this.data.length);\n\n        let cont = el.appendChild(this.createContainer(this.config.domContainer.class));\n        cont.appendChild(scrollerStart);\n        cont.appendChild(scrollerEnd);\n\n        const screenItemsLen = Math.ceil(height / itemHeight);\n\n        this.cachedItemsLen = screenItemsLen + this.config.itemBuffer;\n        this._renderChunk(cont, 0);\n\n        const self = this;\n        let lastRepaintY;\n        const maxBuffer = itemHeight;\n        let lastScrolled = 0;\n\n        //TODO: #chank 2\n        this.rmNodeInterval = setInterval(() => {\n            if (Date.now() - lastScrolled > 100) {\n                const badNodes = document.querySelectorAll('[data-rm=\"delete\"]');\n                for (let i = 0, l = badNodes.length; i < l; i++) {\n                    cont.removeChild(badNodes[i]);\n                }\n            }\n        }, 300);\n\n        function onScroll(e) {\n            let scrollTop = e.target.scrollTop; // Triggers reflow\n            let topHeight = fullHeight-scrollTop - screenItemsLen * itemHeight;\n\n            cont.firstChild.style.minHeight = scrollTop+'px';\n            cont.lastChild.style.minHeight = topHeight+'px';\n\n            if (!lastRepaintY || Math.abs(scrollTop - lastRepaintY) > maxBuffer) {\n                var first = parseInt(scrollTop / itemHeight);\n                self._renderChunk(cont, first < 0 ? 0 : first);\n                lastRepaintY = scrollTop;\n            }\n\n            lastScrolled = Date.now();\n            e.preventDefault && e.preventDefault();\n        }\n\n        //TODO: провесить ивенты для тачей, ресайза, сркола с помощью клавиатуры, возможно другие.\n        cont.addEventListener('scroll', onScroll);\n    }\n\n    createRow(i) {\n        return this.templateList.constructor(this.config.template, this.items[i], this.config.sortKey);\n        //TODO: добавить функцию генерации\n    }\n\n    _renderChunk(node, from) {\n        let finalItem = from + this.cachedItemsLen;\n        if (finalItem > this.totalRows) finalItem = this.totalRows;\n\n        function htmlToElements(html) {\n            var template = document.createElement('template');\n            template.innerHTML = html;\n            return template.content;\n        }\n\n        let htmlArr = [];\n        for (let i = from; i < finalItem; i++) {\n            htmlArr += this.createRow(i);\n        }\n\n        let domInsert = htmlToElements(htmlArr);\n\n        //TODO: переписать это уёбищество с заменой дом дерева на удаление и добавление по кол-ву необходимых чанков\n        //TODO: #chank 1\n        for (let j = 1, l = node.childNodes.length; j < l-1; j++) {\n            node.childNodes[j].style.display = 'none';\n            node.childNodes[j].setAttribute('data-rm', 'delete');\n        }\n\n        node.insertBefore(domInsert, node.lastChild);\n    }\n\n    createContainer(classListString) {\n        var c = document.createElement('div');\n        c.classList.value = classListString;\n        return c;\n    }\n\n    createScroller(height) {\n        var scroller = document.createElement('div');\n        scroller.style.opacity = 0;\n        scroller.style.top = 0;\n        scroller.style.left = 0;\n        scroller.style.width = '100%';\n        scroller.style.minHeight = height + 'px';\n        return scroller;\n    }\n\n    sortedByKey(data, key){\n\n        data.sort(function(a,b){\n            if (a[key] > b[key]) {\n                return 1;\n            }\n            if (a[key] < b[key]) {\n                return -1;\n            }\n            // a должно быть равным b\n            return 0;\n        });\n\n        let fs = data[0][key].charAt(0);\n        let sortObj = {};\n        sortObj[key] = fs;\n        data.splice(0, 0, sortObj);\n\n        for (let i = 0; i < data.length; i++) {\n            if (i<data.length-1 && fs != data[i+1][key].charAt(0)){\n                fs = data[i+1][key].charAt(0);\n                let sortObj = {};\n                sortObj[key] = fs;\n                data.splice(i+1, 0, sortObj);\n                i++;\n            }\n        }\n\n        return data;\n\n    }\n\n};\n\n"]}