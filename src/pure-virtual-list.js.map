{"version":3,"sources":["../dist/pure-virtual-list.js"],"names":[],"mappings":"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","file":"pure-virtual-list.js","sourcesContent":["/**\n * Created by allin_000 on 04.09.2016.\n */\n\n//Если есть необходимость\nclass Api {\n    constructor(obj){\n        return new Promise(\n            function (resolve, reject) {\n\n                if (!obj) reject(new Error('Haven\\'t setting'));\n\n                const request = new XMLHttpRequest();\n\n                request.onload = function () {\n                    if (obj.statusAcceptence.indexOf(this.status) == 0) {\n                        resolve({\n                            response: this.response,\n                            headers: this.getAllResponseHeaders()\n                        });\n                    } else {\n                        reject(new Error(this.statusText));\n                    }\n                };\n\n                request.onerror = function () {\n                    reject(new Error('XMLHttpRequest Error: '+this.statusText));\n                };\n\n                request.ontimeout = function(){\n                    reject(new Error('XMLHttpRequest Error: timeout'));\n                };\n\n                request.onloadstart = function(){\n                    if (obj.onloadstart) obj.onloadstart();\n                };\n\n                request.onloadend = function(){\n                    if (obj.onloadend) obj.onloadend();\n                };\n\n                request.onprogress = function(){\n                    if (obj.onprogress) obj.onprogress();\n                };\n\n                //XHR settings\n                if (obj.timeout){request.timeout = obj.timeout;}\n                if (!obj.method){obj.method = 'GET'}\n                request.open(obj.method, obj.url, true);\n\n                if (obj.headers && obj.headers.length){\n                    for (var i = 0; i < obj.headers.length; i++) {\n                        request.setRequestHeader(obj.headers[i].name, obj.headers[i].value);\n                    }\n                }\n\n                obj.body?request.send(obj.body):request.send();\n\n            });\n    };\n};\n\n\n//Если нужно написать тимплейт со своей сериализацией\nclass ListTemplate{\n\n    constructor(template, items){\n\n        if (!template) return false;\n        var html;\n        switch (template) {\n            case 'list':\n                html = items => `\n                    <div class=\"list-group\">\n                        ${items.map(item =>\n                        (item.name.length > 1)\n                            ? `<a href=\"#action-${item.guid}-${item.email}-${item.company}\" class=\"list-group-item list-group-item-action\">${item.name}</a>`\n                            : `<div class=\"list-group-item \">${item.name}</div>`\n                        ).join('')}\n                    </div>\n                `;\n                break;\n\n            default:\n                console.log('шаблона нету');\n                return false;\n        }\n\n        return html(items);\n    }\n};\n\n//Виртуал лист.\nclass VirtualList {\n\n    VirtualListConfig(config) {\n        const width = (config && `${config.w}px`) || '100%';\n        const height = (config && `${config.h}px`) || '100%';\n        const itemHeight = this.itemHeight = config.itemHeight;\n\n        this.items = config.items;\n        this.generatorFn = config.generatorFn;\n        this.totalRows = config.totalRows || (config.items && config.items.length);\n\n        const scroller = this.createScroller(itemHeight * this.totalRows);\n        this.container = this.createContainer(width, height);\n        this.container.appendChild(scroller);\n\n        const screenItemsLen = Math.ceil(config.h / itemHeight);\n        // Cache 4 times the number of items that fit in the container viewport\n        this.cachedItemsLen = screenItemsLen * 3;\n        this._renderChunk(this.container, 0);\n\n        const self = this;\n        let lastRepaintY;\n        const maxBuffer = screenItemsLen * itemHeight;\n        let lastScrolled = 0;\n\n        this.rmNodeInterval = setInterval(() => {\n            if (Date.now() - lastScrolled > 100) {\n                const badNodes = document.querySelectorAll('[data-rm=\"1\"]');\n                for (let i = 0, l = badNodes.length; i < l; i++) {\n                    self.container.removeChild(badNodes[i]);\n                }\n            }\n        }, 300);\n\n        function onScroll(e) {\n            const scrollTop = e.target.scrollTop; // Triggers reflow\n            if (!lastRepaintY || Math.abs(scrollTop - lastRepaintY) > maxBuffer) {\n                const first = parseInt(scrollTop / itemHeight) - screenItemsLen;\n                self._renderChunk(self.container, first < 0 ? 0 : first);\n                lastRepaintY = scrollTop;\n            }\n\n            lastScrolled = Date.now();\n            e.preventDefault && e.preventDefault();\n        }\n\n        this.container.addEventListener('scroll', onScroll);\n    }\n\n    createRow(i) {\n        let item;\n        if (this.generatorFn)\n            item = this.generatorFn(i);\n        else if (this.items) {\n            if (typeof this.items[i] === 'string') {\n                const itemText = document.createTextNode(this.items[i]);\n                item = document.createElement('div');\n                item.style.height = `${this.itemHeight}px`;\n                item.appendChild(itemText);\n            } else {\n                item = this.items[i];\n            }\n        }\n\n        item.classList.add('vrow');\n        item.style.position = 'absolute';\n        item.style.top = `${i * this.itemHeight}px`;\n        return item;\n    }\n\n    _renderChunk(node, from) {\n        let finalItem = from + this.cachedItemsLen;\n        if (finalItem > this.totalRows) finalItem = this.totalRows;\n\n        // Append all the new rows in a document fragment that we will later append to\n        // the parent node\n        const fragment = document.createDocumentFragment();\n        for (let i = from; i < finalItem; i++) {\n            fragment.appendChild(this.createRow(i));\n        }\n\n        // Hide and mark obsolete nodes for deletion.\n        for (let j = 1, l = node.childNodes.length; j < l; j++) {\n            node.childNodes[j].style.display = 'none';\n            node.childNodes[j].setAttribute('data-rm', '1');\n        }\n        node.appendChild(fragment);\n    }\n\n    createContainer(w, h) {\n        var c = document.createElement('div');\n        return c;\n    }\n\n    createScroller(h) {\n        var scroller = document.createElement('div');\n        return scroller;\n    }\n\n    innerArrayInHTML(obj, data, templateList){\n\n        //TODO: вынести логику сортировки\n        //TODO: переделать логику сортировку по ключу, вместо surname\n        //TODO: сделать заголовки списка в зависимости от regex,\n        //TODO: сделать возможность не обязательных заголовков в листе\n        //TODO:\n\n        data.sort(function(a,b){\n            console.log();\n            let surname = [a.name.split(' ')[1], b.name.split(' ')[1]];\n            if (surname[0] > surname[1]) {\n                return 1;\n            }\n            if (surname[0] < surname[1]) {\n                return -1;\n            }\n            // a должно быть равным b\n            return 0;\n        });\n\n        let fs = data[0].name.split(\" \")[1].charAt(0);\n        data.splice(0, 0, {name: fs});\n\n        for (let i = 0; i < data.length; i++) {\n            if (i<data.length-1 && fs != data[i+1].name.split(\" \")[1].charAt(0)){\n                fs = data[i+1].name.split(\" \")[1].charAt(0);\n                data.splice(i, 0, {name: fs});\n                i++;\n            }\n        }\n\n        for (let i = 0; i < document.querySelectorAll(obj.domElement).length; i++) {\n            let el = document.querySelectorAll(obj.domElement)[i];\n            el.innerHTML = templateList.constructor(obj.template, data);\n            this.VirtualListConfig({\n                w: 300,\n                h: 300,\n                itemHeight: 31,\n                totalRows: 10000\n            });\n        }\n    };\n\n};\n\n"]}